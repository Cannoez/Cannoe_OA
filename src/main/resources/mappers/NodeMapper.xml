<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zeal.zeal_oa.model.dao.NodeMapper">
  <resultMap id="BaseResultMap" type="com.zeal.zeal_oa.model.pojo.Node">
    <id column="node_id" jdbcType="BIGINT" property="nodeId" />
    <result column="node_type" jdbcType="INTEGER" property="nodeType" />
    <result column="node_name" jdbcType="VARCHAR" property="nodeName" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="node_code" jdbcType="INTEGER" property="nodeCode" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <association property="roleNode" javaType="com.zeal.zeal_oa.model.pojo.RoleNode">
      <id column="rn_id" jdbcType="BIGINT" property="rnId" />
      <result column="role_id" jdbcType="BIGINT" property="roleId" />
      <result column="node_id" jdbcType="BIGINT" property="nodeId" />
    </association>
    <association property="roleUser" javaType="com.zeal.zeal_oa.model.pojo.RoleUser">
      <id column="ru_id" jdbcType="BIGINT" property="ruId" />
      <result column="role_id" jdbcType="BIGINT" property="roleId" />
      <result column="user_id" jdbcType="INTEGER" property="userId" />
    </association>
  </resultMap>
  <sql id="Base_Column_List">
    node_id, node_type, node_name, url, node_code, parent_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_node
    where node_id = #{nodeId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_node
    where node_id = #{nodeId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.zeal.zeal_oa.model.pojo.Node">
    <selectKey keyProperty="nodeId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_node (node_type, node_name, url, 
      node_code, parent_id)
    values (#{nodeType,jdbcType=INTEGER}, #{nodeName,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, 
      #{nodeCode,jdbcType=INTEGER}, #{parentId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.zeal.zeal_oa.model.pojo.Node">
    <selectKey keyProperty="nodeId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_node
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="nodeType != null">
        node_type,
      </if>
      <if test="nodeName != null">
        node_name,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="nodeCode != null">
        node_code,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="nodeType != null">
        #{nodeType,jdbcType=INTEGER},
      </if>
      <if test="nodeName != null">
        #{nodeName,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="nodeCode != null">
        #{nodeCode,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zeal.zeal_oa.model.pojo.Node">
    update sys_node
    <set>
      <if test="nodeType != null">
        node_type = #{nodeType,jdbcType=INTEGER},
      </if>
      <if test="nodeName != null">
        node_name = #{nodeName,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="nodeCode != null">
        node_code = #{nodeCode,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
    </set>
    where node_id = #{nodeId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zeal.zeal_oa.model.pojo.Node">
    update sys_node
    set node_type = #{nodeType,jdbcType=INTEGER},
      node_name = #{nodeName,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      node_code = #{nodeCode,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=BIGINT}
    where node_id = #{nodeId,jdbcType=BIGINT}
  </update>
  <!--获取用户编号对应的功能列表-->
  <select id="selectNodeByUserId" parameterType="Long" resultMap="BaseResultMap">
    select
      n.node_id, n.node_type, n.node_name, n.url, n.node_code, n.parent_id
    FROM sys_node AS n
    LEFT JOIN sys_role_node AS rn ON rn.node_id=n.node_id
    LEFT JOIN sys_role_user AS ru ON ru.role_id=rn.role_id
    WHERE ru.user_id=#{userId,jdbcType=BIGINT}
    ORDER BY n.node_code
  </select>
</mapper>